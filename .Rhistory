addCircleMarkers(lng=utm_xy[,1], lat=utm_xy[,2])
leaflet() %>%
addProviderTiles("Acetate.terrain", group="Terrain") %>%
addTiles(options = providerTileOptions(opacity = 0.3), group = "OSM") %>% addCircleMarkers(lng=utm_xy[,2], lat=utm_xy[,1])
x <- c(623672,623672,634696,622732)
y <- c(5172466,5172466,5182751,5166017)
xy <- data.frame(cbind(x,y))
leaflet() %>%
addProviderTiles("Acetate.terrain", group="Terrain") %>%
addTiles(options = providerTileOptions(opacity = 0.3), group = "OSM") %>%
addCircleMarkers(lng=utm_xy[,2], lat=utm_xy[,1])
leaflet() %>%
addProviderTiles("Acetate.terrain", group="Terrain") %>%
addTiles(options = providerTileOptions(opacity = 0.3), group = "OSM") %>%
addCircleMarkers(lng=xy[,2], lat=xy[,1])
leaflet() %>%
addProviderTiles("Acetate.terrain", group="Terrain") %>%
addTiles(options = providerTileOptions(opacity = 0.3), group = "OSM") %>%
addCircleMarkers(lng=xy[,1], lat=xy[,2])
x=c(10.61752603,10.76466049,10.60351978)
y=c(46.69431612,46.7847002,46.63647557)
xy <- cbind(x,y)
utm_xy <- project(xy, proj = "+proj=utm +zone=32 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0", inv = F)
leaflet() %>%
addProviderTiles("Acetate.terrain", group="Terrain") %>%
addTiles(options = providerTileOptions(opacity = 0.3), group = "OSM")
leaflet() %>%
addProviderTiles("Acetate.terrain", group="Terrain") %>%
addTiles(options = providerTileOptions(opacity = 0.3), group = "OSM") %>%
addCircleMarkers(lng=xy[,1], lat=xy[,2])
dem <- "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv//GIS/Daten/Suedtirol/Vinschgau/Matschertal/DEM/Laserscan%20Data/matsch_2_5"
r <- raster(dem)
dem <- "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv//GIS/Daten/Suedtirol/Vinschgau/Matschertal/DEM/Laserscan Data/matsch_2_5/hdr.adf"
r <- raster(dem)
str(r)
x <- c(623672,634696,622732)
y <- c(5172466,5182751,5166017)
xy <- data.frame(cbind(x,y))
hor <- horizon(r = r, points = xy, names = c("met12", "met3", "met4"))
dem <- "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/GIS/Daten/Suedtirol/DEM/dgm_20m/hdr.adf"
r <- raster(dem)
hor <- horizon(r = r, points = xy, names = c("met12", "met3", "met4"))
str(hor)
x <- c(634696,622732)
y <- c(5182751,5166017)
xy <- data.frame(cbind(x,y))
dem <- "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/GIS/Daten/Suedtirol/DEM/dgm_20m/hdr.adf"
r <- raster(dem)
hor <- horizon(r = r, points = xy, names = c("met3", "met4"),n = 144)
str(hor)
write.csv(hor$met3, "/home/jbr/Schreibtisch/horizon0003.txt")
write.csv(hor$met4, "/home/jbr/Schreibtisch/horizon0004.txt")
write.csv(hor$met4, "/home/jbr/Schreibtisch/horizon0004.txt", quote = F, row.names = F)
write.csv(hor$met3, "/home/jbr/Schreibtisch/horizon0003.txt", quote = F, row.names = F)
source('/run/user/1000/gvfs/smb-share:server=abz01fst.eurac.edu,share=users/Common/Interdisciplinary_projects/HiResAlp/01_data/Radarsat_Field_Work/R/aggregate_HYD.R', echo=TRUE)
wpath("/run/user/1000/gvfs/smb-share:server=abz01fst.eurac.edu,share=users/Common/Interdisciplinary_projects/HiResAlp/01_data/Radarsat_Field_Work/2015/Field_Campaign_2015_05_12/Data_WET")
wpath <- "/run/user/1000/gvfs/smb-share:server=abz01fst.eurac.edu,share=users/Common/Interdisciplinary_projects/HiResAlp/01_data/Radarsat_Field_Work/2015/Field_Campaign_2015_05_12/Data_WET"
test <- aggregate_HYD(wpath = wpath, WET = WET, aggrByZONE = FALSE, write.csv = FALSE)
WET <- "HydroSense_3346.csv"
test <- aggregate_HYD(wpath = wpath, WET = WET, aggrByZONE = FALSE, write.csv = FALSE)
if(!require(data.table)) {
install.packages("data.table"); require(data.table)
} else {require(data.table)}
if(!require(tidyr)) {
install.packages("tidyr"); require(tidyr)
} else {require(tidyr)}
if(!require(dplyr)) {
install.packages("dplyr"); require(dplyr)
} else {require(dplyr)}
if(!require(stringr)) {
install.packages("stringr"); require(stringr)
} else {require(stringr)}
if(!require(data.table)) {
install.packages("data.table"); require(data.table)
} else {require(data.table)}
if(!require(tidyr)) {
install.packages("tidyr"); require(tidyr)
} else {require(tidyr)}
if(!require(dplyr)) {
install.packages("dplyr"); require(dplyr)
} else {require(dplyr)}
if(!require(stringr)) {
install.packages("stringr"); require(stringr)
} else {require(stringr)}
wet <- read.csv(file.path(wpath,WET), header=T)
meta <- read.csv2(file.path(wpath,META), header=T)
META=NULL
meta <- read.csv2(file.path(wpath,META), header=T)
wet <- read.csv(file.path(wpath,WET), header=T)
wet <- as.data.table(wet)
if (!is.null(META))
meta <- read.csv2(file.path(wpath,META), header=T)
test <- aggregate_HYD(wpath = wpath, WET = WET, aggrByZONE = FALSE, write.csv = FALSE, datetime_format = "%d/%m/%Y %H:%M:%S %p")
}
source('/run/user/1000/gvfs/smb-share:server=abz01fst.eurac.edu,share=users/Common/Interdisciplinary_projects/HiResAlp/01_data/Radarsat_Field_Work/R/aggregate_HYD.R', echo=TRUE)
source('/run/user/1000/gvfs/smb-share:server=abz01fst.eurac.edu,share=users/Common/Interdisciplinary_projects/HiResAlp/01_data/Radarsat_Field_Work/R/aggregate_HYD.R', echo=TRUE)
test <- aggregate_HYD(wpath = wpath, WET = WET, aggrByZONE = FALSE, write.csv = FALSE, datetime_format = "%d/%m/%Y %H:%M:%S %p")
str(test)
View(test)
test <- aggregate_HYD(wpath = wpath, WET = WET, aggrByZONE = TRUE, write.csv = FALSE, datetime_format = "%d/%m/%Y %H:%M:%S %p")
View(test)
test <- aggregate_HYD(wpath = wpath, WET = WET, aggrByZONE = F, write.csv = FALSE, datetime_format = "%d/%m/%Y %H:%M:%S %p")
View(test)
source('/run/user/1000/gvfs/smb-share:server=abz01fst.eurac.edu,share=users/Common/Interdisciplinary_projects/HiResAlp/01_data/Radarsat_Field_Work/R/aggregate_HYD.R', echo=TRUE)
test <- aggregate_HYD(wpath = wpath, WET = WET, aggrByZONE = F, write.csv = FALSE, datetime_format = "%d/%m/%Y %H:%M:%S %p")
View(test)
source('/run/user/1000/gvfs/smb-share:server=abz01fst.eurac.edu,share=users/Common/Interdisciplinary_projects/HiResAlp/01_data/Radarsat_Field_Work/R/aggregate_HYD.R', echo=TRUE)
test <- aggregate_HYD(wpath = wpath, WET = WET, aggrByZONE = FALSE, write.csv = FALSE, datetime_format = "%d/%m/%Y %H:%M:%S %p")
source('/run/user/1000/gvfs/smb-share:server=abz01fst.eurac.edu,share=users/Common/Interdisciplinary_projects/HiResAlp/01_data/Radarsat_Field_Work/R/aggregate_HYD.R', echo=TRUE)
test <- aggregate_HYD(wpath = wpath, WET = WET, aggrByZONE = FALSE, write.csv = FALSE, datetime_format = "%d/%m/%Y %H:%M:%S %p")
source('/run/user/1000/gvfs/smb-share:server=abz01fst.eurac.edu,share=users/Common/Interdisciplinary_projects/HiResAlp/01_data/Radarsat_Field_Work/R/aggregate_HYD.R', echo=TRUE)
test <- aggregate_HYD(wpath = wpath, WET = WET, aggrByZONE = FALSE, write.csv = FALSE, datetime_format = "%d/%m/%Y %H:%M:%S %p")
View(test)
source('/run/user/1000/gvfs/smb-share:server=abz01fst.eurac.edu,share=users/Common/Interdisciplinary_projects/HiResAlp/01_data/Radarsat_Field_Work/R/aggregate_HYD.R', echo=TRUE)
test <- aggregate_HYD(wpath = wpath, WET = WET, aggrByZONE = FALSE, write.csv = FALSE, datetime_format = "%d/%m/%Y %H:%M:%S %p")
View(test)
source('/run/user/1000/gvfs/smb-share:server=abz01fst.eurac.edu,share=users/Common/Interdisciplinary_projects/HiResAlp/01_data/Radarsat_Field_Work/R/aggregate_HYD.R', echo=TRUE)
test <- aggregate_HYD(wpath = wpath, WET = WET, aggrByZONE = FALSE, write.csv = FALSE, datetime_format = "%d/%m/%Y %H:%M:%S %p")
source('/run/user/1000/gvfs/smb-share:server=abz01fst.eurac.edu,share=users/Common/Interdisciplinary_projects/HiResAlp/01_data/Radarsat_Field_Work/R/aggregate_HYD.R', echo=TRUE)
test <- aggregate_HYD(wpath = wpath, WET = WET, aggrByZONE = FALSE, write.csv = FALSE, datetime_format = "%d/%m/%Y %H:%M:%S %p")
?round
trunc(2.6)
source('/run/user/1000/gvfs/smb-share:server=abz01fst.eurac.edu,share=users/Common/Interdisciplinary_projects/HiResAlp/01_data/Radarsat_Field_Work/R/aggregate_HYD.R', echo=TRUE)
test <- aggregate_HYD(wpath = wpath, WET = WET, aggrByZONE = FALSE, write.csv = FALSE, datetime_format = "%d/%m/%Y %H:%M:%S %p")
trunc(2.4563)
trunc(2.4563,3)
signif(2.4563,3)
signif(2.4563,4)
signif(2.4563,5)
signif(2.45634,5)
signif(2.45636,5)
ceiling(2.45636,5)
ceiling(2.45636)
floor(2.45636)
source('/run/user/1000/gvfs/smb-share:server=abz01fst.eurac.edu,share=users/Common/Interdisciplinary_projects/HiResAlp/01_data/Radarsat_Field_Work/R/aggregate_HYD.R', echo=TRUE)
test <- aggregate_HYD(wpath = wpath, WET = WET, aggrByZONE = FALSE, write.csv = FALSE, datetime_format = "%d/%m/%Y %H:%M:%S %p")
test <- aggregate_HYD(wpath = wpath, WET = WET, aggrByZONE = FALSE, write.csv = TRUE, datetime_format = "%d/%m/%Y %H:%M:%S %p")
WET
substr(WET, 1, nchar(WET)-4)
source('/run/user/1000/gvfs/smb-share:server=abz01fst.eurac.edu,share=users/Common/Interdisciplinary_projects/HiResAlp/01_data/Radarsat_Field_Work/R/aggregate_HYD.R', echo=TRUE)
test <- aggregate_HYD(wpath = wpath, WET = WET, aggrByZONE = FALSE, write.csv = TRUE, datetime_format = "%d/%m/%Y %H:%M:%S %p")
WET
grepl("%p", datetime_format)
datetime_format=c("%d/%m/%Y %H:%M:%S")
grepl("%p", datetime_format)
grepl("%H", datetime_format)
source('/run/user/1000/gvfs/smb-share:server=abz01fst.eurac.edu,share=users/Common/Interdisciplinary_projects/HiResAlp/01_data/Radarsat_Field_Work/R/aggregate_HYD.R', echo=TRUE)
test <- aggregate_HYD(wpath = wpath, WET = WET, aggrByZONE = FALSE, write.csv = TRUE, datetime_format = "%d/%m/%Y %H:%M:%S %p")
source('/run/user/1000/gvfs/smb-share:server=abz01fst.eurac.edu,share=users/Common/Interdisciplinary_projects/HiResAlp/01_data/Radarsat_Field_Work/R/aggregate_HYD.R', echo=TRUE)
test <- aggregate_HYD(wpath = wpath, WET = WET, aggrByZONE = FALSE, write.csv = TRUE, datetime_format = "%d/%m/%Y %H:%M:%S %p")
View(test)
datetime_format = "%d/%m/%Y %H:%M:%S %p"
if(!require(data.table)) {
install.packages("data.table"); require(data.table)
} else {require(data.table)}
if(!require(tidyr)) {
install.packages("tidyr"); require(tidyr)
} else {require(tidyr)}
if(!require(dplyr)) {
install.packages("dplyr"); require(dplyr)
} else {require(dplyr)}
if(!require(stringr)) {
install.packages("stringr"); require(stringr)
} else {require(stringr)}
if (grepl("%p", datetime_format)){
if(!require(lubridate)) {
install.packages("lubridate"); require(lubridate)
} else {require(lubridate)}
}
wet <- read.csv(file.path(wpath,WET), header=T)
wet <- as.data.table(wet)
if (!is.null(META))
meta <- read.csv2(file.path(wpath,META), header=T)
if (length(datetime_format)==1) {
wet[,TimeStamp:=as.numeric(as.POSIXlt(as.character(TimeStamp), format=datetime_format))]
} else {
wet[,TimeStamp:=as.numeric(as.POSIXlt(as.character(TimeStamp), format=datetime_format[i]))]
}
# longitude*latitude for groupin
wet[,lonlat:=round(Latitude,4)*round(Longitude,4)]
# aggegate data (mean, standard deviation) grouped by zones
wet_mean_sd <-
wet %>%
filter(Moisture...... < 60) %>%
group_by(lonlat) %>%
summarise_each_(funs = funs(mean, sd),
list(quote(-Zone), quote(-Record), quote(-Probe.Model)))
wet_mean_sd <- wet_mean_sd[,Date:=as.IDate(as.POSIXlt(TimeStamp_mean, origin="1970-01-01"))]
wet_mean_sd
View(wet_mean_sd)
wet_mean_sd <- wet_mean_sd[,Time:=as.ITime(ymd_hms(TimeStamp_mean, origin="1970-01-01"))]
wet_mean_sd[,Time:=as.ITime(ymd_hms(as.POSIXlt(TimeStamp_mean, origin="1970-01-01"))]
wet_mean_sd[,Time:=as.ITime(as.POSIXlt(TimeStamp_mean, origin="1970-01-01"))]
View(wet_mean_sd)
wet_mean_sd <-
wet %>%
filter(Moisture...... < 60) %>%
group_by(lonlat) %>%
summarise_each_(funs = funs(mean, sd),
list(quote(-Zone), quote(-Record), quote(-Probe.Model)))
View(wet_mean_sd)
wet_mean_sd[,Date:=as.IDate(as.POSIXlt(TimeStamp_mean, origin="1970-01-01"))]
View(wet)
View(wet_mean_sd)
?"as.ITime"
wet_mean_sd <- wet_mean_sd[,Time:=as.ITime(TimeStamp_mean, origin="1970-01-01")]
View(wet_mean_sd)
as.POSIXlt(wet_mean_sd$TimeStamp_mean, origin="1970-01-01")
as.POSIXct(wet_mean_sd$TimeStamp_mean, origin="1970-01-01")
as.POSIXlt(wet_mean_sd$TimeStamp_mean, origin="1970-01-01")
ymd_hms(as.POSIXlt(wet_mean_sd$TimeStamp_mean, origin="1970-01-01"))
str(as.POSIXlt(wet_mean_sd$TimeStamp_mean, origin="1970-01-01"))
if (grepl("%p", datetime_format)) {
hour(as.POSIXlt(wet_mean_sd$TimeStamp_mean, origin="1970-01-01"))
datetime <- as.POSIXlt(wet_mean_sd$TimeStamp_mean, origin="1970-01-01")
datetime <- as.POSIXlt(wet_mean_sd$TimeStamp_mean, origin="1970-01-01")
hour <- hour(datetime)
ifelse(hour<=8 | hour==12, paste(datetime, "PM"), paste(datetime, "AM"))
ymd_hms(datetime_p)
datetime_p <- ifelse(hour<=8 | hour==12, paste(datetime, "PM"), paste(datetime, "AM"))
ymd_hms(datetime_p)
?strptime
source('/run/user/1000/gvfs/smb-share:server=abz01fst.eurac.edu,share=users/Common/Interdisciplinary_projects/HiResAlp/01_data/Radarsat_Field_Work/R/aggregate_HYD.R', echo=TRUE)
test <- aggregate_HYD(wpath = wpath, WET = WET, aggrByZONE = FALSE, write.csv = TRUE, datetime_format = "%d/%m/%Y %I:%M:%S %p")
View(test)
source('/run/user/1000/gvfs/smb-share:server=abz01fst.eurac.edu,share=users/Common/Interdisciplinary_projects/HiResAlp/01_data/Radarsat_Field_Work/R/aggregate_HYD.R', echo=TRUE)
test <- aggregate_HYD(wpath = wpath, WET = WET, aggrByZONE = FALSE, write.csv = TRUE, datetime_format = "%d/%m/%Y %I:%M:%S %p")
View(test)
test <- aggregate_HYD(wpath = wpath, WET = WET, aggrByZONE = FALSE, write.csv = TRUE, datetime_format = "%d/%m/%Y %I:%M:%S %p")
WET <- "HydroSense_3350.csv"
test <- aggregate_HYD(wpath = wpath, WET = WET, aggrByZONE = FALSE, write.csv = TRUE, datetime_format = "%d/%m/%Y %I:%M:%S %p")
View(test)
wpath <- "/run/user/1000/gvfs/smb-share:server=abz01fst.eurac.edu,share=users/Common/Interdisciplinary_projects/HiResAlp/01_data/Radarsat_Field_Work/2015/Field_Campaign_2015_06_15/Data_WET"
WET <- "HYD03343_BeG.csv"
WET  <- "HYD03343_BeG.csv"
META <- "meta_BeG.csv"
test <- aggregate_HYD(wpath = wpath, WET = WET, META = META, aggrByZONE = FALSE, write.csv = TRUE, datetime_format = "%d/%m/%Y %I:%M:%S %p")
test <- aggregate_HYD(wpath = wpath, WET = WET, META = META, aggrByZONE = FALSE, write.csv = TRUE)
wet <- read.csv(file.path(wpath,WET), header=T)
wet <- as.data.table(wet)
if (!is.null(META))
meta <- read.csv2(file.path(wpath,META), header=T)
View(meta)
if (length(datetime_format)==1) {
wet[,TimeStamp:=as.numeric(as.POSIXlt(as.character(TimeStamp), format=datetime_format))]
} else {
wet[,TimeStamp:=as.numeric(as.POSIXlt(as.character(TimeStamp), format=datetime_format[i]))]
}
wet
datetime_format
datetime_format=c("%d/%m/%Y %H:%M")
wet <- read.csv(file.path(wpath,WET), header=T)
wet <- as.data.table(wet)
if (length(datetime_format)==1) {
wet[,TimeStamp:=as.numeric(as.POSIXlt(as.character(TimeStamp), format=datetime_format))]
} else {
wet[,TimeStamp:=as.numeric(as.POSIXlt(as.character(TimeStamp), format=datetime_format[i]))]
}
wet
datetime_format
datetime_format=c("%d/%m/%Y %H:%M:%S")
wet <- read.csv(file.path(wpath,WET), header=T)
wet <- as.data.table(wet)
if (length(datetime_format)==1) {
wet[,TimeStamp:=as.numeric(as.POSIXlt(as.character(TimeStamp), format=datetime_format))]
} else {
wet[,TimeStamp:=as.numeric(as.POSIXlt(as.character(TimeStamp), format=datetime_format[i]))]
}
wet
} else {
wet <- read.csv(file.path(wpath,WET), header=T)
wet <- as.data.table(wet)
wet
datetime_format=c("%m/%d/%Y %H:%M:%S")
wet <- read.csv(file.path(wpath,WET), header=T)
wet <- as.data.table(wet)
if (length(datetime_format)==1) {
wet[,TimeStamp:=as.numeric(as.POSIXlt(as.character(TimeStamp), format=datetime_format))]
} else {
wet[,TimeStamp:=as.numeric(as.POSIXlt(as.character(TimeStamp), format=datetime_format[i]))]
}
wet
datetime_format=c("%m/%d/%Y %H:%M")
wet <- read.csv(file.path(wpath,WET), header=T)
# convert to data.table
wet <- as.data.table(wet)
if (length(datetime_format)==1) {
wet[,TimeStamp:=as.numeric(as.POSIXlt(as.character(TimeStamp), format=datetime_format))]
} else {
wet[,TimeStamp:=as.numeric(as.POSIXlt(as.character(TimeStamp), format=datetime_format[i]))]
}
wet
source('/run/user/1000/gvfs/smb-share:server=abz01fst.eurac.edu,share=users/Common/Interdisciplinary_projects/HiResAlp/01_data/Radarsat_Field_Work/R/aggregate_HYD.R', echo=TRUE)
datetime_format = "%m/%d/%Y %H:%M"
test <- aggregate_HYD(wpath = wpath, WET = WET, META = META, aggrByZONE = FALSE, write.csv = TRUE, datetime_format = datetime_format)
View(test)
test <- aggregate_HYD(wpath = wpath, WET = WET, META = META, aggrByZONE = TRUE, write.csv = TRUE, datetime_format = datetime_format)
View(test)
WET  <- "HYD03346_CoE.csv"
META <- "meta_CoE.csv"
datetime_format = "%m/%d/%Y %H:%M"
test <- aggregate_HYD(wpath = wpath, WET = WET, META = META, aggrByZONE = TRUE, write.csv = TRUE, datetime_format = datetime_format)
View(test)
WET  <- "HYD03350_BrJ.csv"
WET  <- "HYD03350_BrJ.csv"
META <- "meta_BrJ.csv"
datetime_format = "%m/%d/%Y %H:%M"
test <- aggregate_HYD(wpath = wpath, WET = WET, META = META, aggrByZONE = TRUE, write.csv = TRUE, datetime_format = datetime_format)
View(test)
wpath <- "/run/user/1000/gvfs/smb-share:server=abz01fst.eurac.edu,share=users/Common/Interdisciplinary_projects/HiResAlp/01_data/Radarsat_Field_Work/2015/Field_Campaign_2015_08_21/Data_WET"
WET  <- "HYD03343_2015_08_21.csv"
META <- NULL
datetime_format = "%m/%d/%Y %H:%M:%S"
test <- aggregate_HYD(wpath = wpath, WET = WET, META = META, aggrByZONE = TRUE, write.csv = TRUE, datetime_format = datetime_format)
test <- aggregate_HYD(wpath = wpath, WET = WET, META = META, aggrByZONE = FALSE, write.csv = TRUE, datetime_format = datetime_format)
View(test)
source('/run/user/1000/gvfs/smb-share:server=abz01fst.eurac.edu,share=users/Common/Interdisciplinary_projects/HiResAlp/01_data/Radarsat_Field_Work/R/aggregate_HYD.R', echo=TRUE)
test <- aggregate_HYD(wpath = wpath, WET = WET, META = META, aggrByZONE = FALSE, write.csv = TRUE, latlon_round = 5, datetime_format = datetime_format)
WET  <- "HYD03350_2015_08_21.csv"
META <- NULL
datetime_format = "%m/%d/%Y %H:%M:%S"
test <- aggregate_HYD(wpath = wpath, WET = WET, META = META, aggrByZONE = FALSE, write.csv = TRUE, latlon_round = 5, datetime_format = datetime_format)
test <- aggregate_HYD(wpath = wpath, WET = WET, META = META, aggrByZONE = FALSE, write.csv = TRUE, latlon_round = 4, datetime_format = datetime_format)
test <- aggregate_HYD(wpath = wpath, WET = WET, META = META, aggrByZONE = FALSE, write.csv = TRUE, latlon_round = 5, datetime_format = datetime_format)
View(test)
test <- aggregate_HYD(wpath = wpath, WET = WET, META = META, aggrByZONE = FALSE, write.csv = TRUE, latlon_round = 5, datetime_format = datetime_format)
WET  <- "HydroSense_3343_2015_09_21.csv"
META <- NULL
datetime_format = "%m/%d/%Y %H:%M:%S"
test <- aggregate_HYD(wpath = wpath, WET = WET, META = META, aggrByZONE = FALSE, write.csv = TRUE, latlon_round = 5, datetime_format = datetime_format)
wpath <- "/run/user/1000/gvfs/smb-share:server=abz01fst.eurac.edu,share=users/Common/Interdisciplinary_projects/HiResAlp/01_data/Radarsat_Field_Work/2015/Field_Campaign_2015_09_21/Data_WET"
WET  <- "HydroSense_3343_2015_09_21.csv"
META <- NULL
datetime_format = "%m/%d/%Y %H:%M:%S"
test <- aggregate_HYD(wpath = wpath, WET = WET, META = META, aggrByZONE = FALSE, write.csv = TRUE, latlon_round = 5, datetime_format = datetime_format)
datetime_format = "%d/%m/%Y %H:%M:%S"
test <- aggregate_HYD(wpath = wpath, WET = WET, META = META, aggrByZONE = FALSE, write.csv = TRUE, latlon_round = 5, datetime_format = datetime_format)
View(test)
wpath <- "/run/user/1000/gvfs/smb-share:server=abz01fst.eurac.edu,share=users/Common/Interdisciplinary_projects/HiResAlp/01_data/Radarsat_Field_Work/2015/Field_Campaign_2015_09_21/Data_WET"
WET  <- "HydroSense_3350_2015_09_21.csv"
META <- NULL
datetime_format = "%d/%m/%Y %H:%M:%S"
test <- aggregate_HYD(wpath = wpath, WET = WET, META = META, aggrByZONE = FALSE, write.csv = TRUE, latlon_round = 5, datetime_format = datetime_format)
View(test)
WET  <- "HydroSense_3346_2015_09_21.csv"
META <- NULL
datetime_format = "%d/%m/%Y %H:%M:%S"
test <- aggregate_HYD(wpath = wpath, WET = WET, META = META, aggrByZONE = FALSE, write.csv = TRUE, latlon_round = 5, datetime_format = datetime_format)
datetime_format = "%d/%m/%Y %H:%M:%S"
WET  <- "HydroSense_3343_2015_09_21.csv"
META <- NULL
datetime_format = "%d/%m/%Y %H:%M:%S"
test <- aggregate_HYD(wpath = wpath, WET = WET, META = META, aggrByZONE = FALSE, write.csv = TRUE, latlon_round = 5, datetime_format = datetime_format)
WET  <- "HydroSense_3343_2015_09_21.csv"
META <- NULL
datetime_format = "%d/%m/%Y %H:%M:%S"
test <- aggregate_HYD(wpath = wpath, WET = WET, META = META, aggrByZONE = FALSE, write.csv = TRUE, latlon_round = 5, datetime_format = datetime_format)
View(test)
wpath <- "/run/user/1000/gvfs/smb-share:server=abz01fst.eurac.edu,share=users/Common/Interdisciplinary_projects/HiResAlp/01_data/Radarsat_Field_Work/2015/Field_Campaign_2015_10_12/Data_WET"
WET  <- "HydroSense_3350_2015_10_12.csv"
META <- NULL
datetime_format = "%d/%m/%Y %H:%M:%S"
test <- aggregate_HYD(wpath = wpath, WET = WET, META = META, aggrByZONE = FALSE, write.csv = TRUE, latlon_round = 5, datetime_format = datetime_format)
WET  <- "HydroSense_3343_2015_10_12.csv"
META <- NULL
datetime_format = "%d/%m/%Y %H:%M:%S"
test <- aggregate_HYD(wpath = wpath, WET = WET, META = META, aggrByZONE = FALSE, write.csv = TRUE, latlon_round = 5, datetime_format = datetime_format)
library(rgrass7)
initGRASS()
slp <- raster("/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/GIS/Daten/Suedtirol/Vinschgau/Matschertal/DEM/Laserscan Data/topography/slope.tif")
library(rgdal)
library(raster)
library(rgrass7)
slp <- raster("/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/GIS/Daten/Suedtirol/Vinschgau/Matschertal/DEM/Laserscan Data/topography/slope.tif")
slope <- extract(x = slp, y=xy)
load("/run/user/1000/gvfs/smb-share:server=abz01fst.eurac.edu,share=users/Common/Interdisciplinary_projects/HiResAlp/01_data/Radarsat_Field_Work/R/data/SMC_mobile_campaigns.RData")
xy <- cbind(DATA$utmx, DATA$utmy)
slope <- extract(x = slp, y=xy)
slope
asp <- raster("/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/GIS/Daten/Suedtirol/Vinschgau/Matschertal/DEM/Laserscan Data/topography/aspect.tif")
aspect <- extract(x = asp, y=xy)
aspect
slope
dem <- raster("/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/GIS/Daten/Suedtirol/Vinschgau/Matschertal/DEM/Laserscan Data/matsch_2_5/w001001.adf")
elevation <- extract(x = dem, y=xy)
elevation
curvp <- raster("/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/GIS/Daten/Suedtirol/Vinschgau/Matschertal/DEM/Laserscan Data/topography/curvp.tif")
curvp <- raster("/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/GIS/Daten/Suedtirol/Vinschgau/Matschertal/DEM/Laserscan Data/topography/pcurv.tif")
curvProfile <- extract(x = curvp, y=xy)
curvProfile
library(rgdal)
library(raster)
library(rgrass7)
load("/run/user/1000/gvfs/smb-share:server=abz01fst.eurac.edu,share=users/Common/Interdisciplinary_projects/HiResAlp/01_data/Radarsat_Field_Work/R/data/SMC_mobile_campaigns.RData")
xy <- cbind(DATA$utmx, DATA$utmy)
# dem
dem <- raster("/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/GIS/Daten/Suedtirol/Vinschgau/Matschertal/DEM/Laserscan Data/matsch_2_5/w001001.adf")
elevation <- extract(x = dem, y=xy)
DATA <- cbind(DATA,elevation)
# slope
slp <- raster("/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/GIS/Daten/Suedtirol/Vinschgau/Matschertal/DEM/Laserscan Data/topography/slope.tif")
slope <- extract(x = slp, y=xy)
slope <- round(slope,1)
DATA <- cbind(DATA,slope)
# aspect
asp <- raster("/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/GIS/Daten/Suedtirol/Vinschgau/Matschertal/DEM/Laserscan Data/topography/aspect.tif")
aspect <- extract(x = asp, y=xy)
aspect <- round(aspect,1)
DATA <- cbind(DATA,aspect)
# profile curvature
curvp <- raster("/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/GIS/Daten/Suedtirol/Vinschgau/Matschertal/DEM/Laserscan Data/topography/pcurv.tif")
curvProfile <- extract(x = curvp, y=xy)
DATA <- cbind(DATA,curvProfile)
# horizontal curvature
curvt <- raster("/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/GIS/Daten/Suedtirol/Vinschgau/Matschertal/DEM/Laserscan Data/topography/tcurv.tif")
curvHorizon <- extract(x = curvt, y=xy)
DATA <- cbind(DATA,curvHorizon)
View(DATA)
plot(DATA[,c(9,11,13,15,16,17,19,20,21,22,2,3)])
plot(DATA[,c(9,11,13,15,16,17,19,20,21,22,23)])
save(list = "DATA", file = "/run/user/1000/gvfs/smb-share:server=abz01fst.eurac.edu,share=users/Common/Interdisciplinary_projects/HiResAlp/01_data/Radarsat_Field_Work/R/data/SMC_mobile_campaigns_1.RData")
library(SoilMoisturePattern)
data("HiResAlp_MobileCampaigns")
View(HiResAlp_MobileCampaigns)
plot(HiResAlp_MobileCampaigns$SoilMoisture_mean, HiResAlp_MobileCampaigns$TWI)
plot(HiResAlp_MobileCampaigns$SoilMoisture_mean, HiResAlp_MobileCampaigns$flowAccum)
plot(HiResAlp_MobileCampaigns$SoilMoisture_mean, HiResAlp_MobileCampaigns$flowAccum, ylim=c(0,5000))
library(devtools)
install_github("JBrenn/SoilMoisturePattern")
library(SoilMoisturePattern)
?HiResAlp_MobileCampaigns
remove.packages(SoilMosturePattern)
remove.packages(SoilMoisturePattern)
remove.packages("SoilMoisturePattern")
library(devtools)
install_github("JBrenn/SoilMoisturePattern")
?HiResAlp_MobileCampaigns
library(SoilMoisturePattern)
?HiResAlp_MobileCampaigns
data("HiResAlp_MobileCampaigns")
View(HiResAlp_MobileCampaigns)
remove.packages("SoilMoisturePattern")
library(devtools)
install_github("JBrenn/SoilMoisturePattern")
library(SoilMoisturePattern)
data("HiResAlp_MobileCampaigns")
View(HiResAlp_MobileCampaigns)
plot(HiResAlp_MobileCampaigns$SoilMoisture_mean_Processed, HiResAlp_MobileCampaigns$MODIS.NDVI.mean)
library(ggplot2)
ggplot(HiResAlp_MobileCampaigns, aes(x=MODIS.NDVI.mean, y=SoilMoisture_mean_Processed, group=date)) +
geom_point()
ggplot(HiResAlp_MobileCampaigns, aes(x=MODIS.NDVI.mean, y=SoilMoisture_mean_Processed, group=date, col=date)) +
geom_point()
ggplot(HiResAlp_MobileCampaigns, aes(x=MODIS.NDVI.mean, y=SoilMoisture_mean_Processed)) +
geom_point() +
facet_grid(facets = date ~ .)
ggplot(HiResAlp_MobileCampaigns, aes(x=MODIS.NDVI.mean, y=SoilMoisture_mean_Processed)) +
geom_point() +
facet_grid(facets = date ~ landuseLab)
ggplot(HiResAlp_MobileCampaigns, aes(x=MODIS.NDVI.mean, y=SoilMoisture_mean_Processed)) +
geom_point() +
facet_grid(facets = date ~ CampaignType)
ggplot(HiResAlp_MobileCampaigns, aes(x=MODIS.NDVI.mean, y=precedingRain5_P2)) +
geom_point() +
facet_grid(facets = date ~ CampaignType)
ggplot(HiResAlp_MobileCampaigns, aes(x=precedingRain5_P2, y=SoilMoisture_mean_Processed)) +
geom_point() +
facet_grid(facets = date ~ CampaignType)
ggplot(HiResAlp_MobileCampaigns, aes(x=slope, y=SoilMoisture_mean_Processed)) +
geom_point() +
facet_grid(facets = date ~ CampaignType)
ggplot(HiResAlp_MobileCampaigns, aes(x=elevation, y=SoilMoisture_mean_Processed)) +
geom_point() +
facet_grid(facets = date ~ CampaignType)
ggplot(HiResAlp_MobileCampaigns, aes(x=elevation, y=SoilMoisture_mean_Processed, col=Landuse)) +
geom_point() +
facet_grid(facets = date ~ CampaignType)
ggplot(HiResAlp_MobileCampaigns, aes(x=elevation, y=SoilMoisture_mean_Processed, col=SoilCoverage)) +
geom_point() +
facet_grid(facets = date ~ CampaignType)
ggplot(HiResAlp_MobileCampaigns, aes(x=SoilMoisture_mean_Processed, y=elevation, col=SoilCoverage)) +
geom_point() +
facet_grid(facets = date ~ CampaignType)
ggplot(HiResAlp_MobileCampaigns, aes(x=SoilMoisture_mean_Processed, y=elevation, col=VegHeight)) +
geom_point() +
facet_grid(facets = date ~ CampaignType)
ggplot(HiResAlp_MobileCampaigns, aes(x=SoilMoisture_mean_Processed, y=elevation, col=VegetationHeight)) +
geom_point() +
facet_grid(facets = date ~ CampaignType)
remove.packages("SoilMoisturePattern", lib="~/R/x86_64-pc-linux-gnu-library/3.2")
source('~/GitHub/jbrenn.github.com/rmd2md.R', echo=TRUE)
rmd2md()
rmd2md()
setwd("/home/jbr/GitHub/jbrenn.github.com/")
rmd2md()
rmd2md()
rmd2md()
rmd2md()
rmd2md()
rmd2md()
rmd2md()
rmd2md()
rmd2md()
rmd2md()
rmd2md()
rmd2md()
rmd2md()
rmd2md()
rmd2md()
rmd2md()
rmd2md()
rmd2md()
